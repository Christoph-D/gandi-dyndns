#!/usr/bin/python

import xmlrpclib
import getopt
import sys

api = xmlrpclib.ServerProxy('https://rpc.gandi.net/xmlrpc/')

def main():
    apikey = ''
    domain = ''
    record = ''

    try:
        opts, args = getopt.getopt(sys.argv[1:], "ahrd", ["api=", "record=", "help", "domain="])
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-a", "--api"):
            apikey = arg
        elif opt in ("-d", "--domain"):
            domain = arg
        elif opt in ("-h", "--help"):
            usage()
            sys.exit()
        elif opt in ("-r", "--record"):
            record = arg

    if check_if_apikey_exists(apikey) == False:
        print ("Apikey " + apikey + " does not exist or is malformed")
        usage()
        sys.exit()

    if check_if_domain_exists(apikey, domain) == False:
        print ("Domain " + domain + " does not exist")
        usage()
        sys.exit()

    #zone_id = domain_info(apikey, domain)['zone_id']
    #print(zone_test(apikey, zone_id))

def usage():
    print("Usage: gandi-dyndns --api=APIKEY --domain=DOMAIN --record=RECORD")

def api_version(apikey):
    return api.version.info(apikey)

def zone_list(apikey):
    return api.domain.zone.list(apikey)

def zone_test(apikey, zone_id):
    return api.domain.zone.record.list(apikey, zone_id, 0)

def domain_info(apikey, domain):
    return api.domain.info(apikey, domain)

def check_if_domain_exists(apikey, domain):
    try:
        api.domain.info(apikey, domain)
        return True
    except xmlrpclib.Fault as err:
        return False

def check_if_apikey_exists(apikey):
    try:
        api_version(apikey)
        return True
    except xmlrpclib.Fault as err:
        return False

if __name__ == "__main__":
    main()
